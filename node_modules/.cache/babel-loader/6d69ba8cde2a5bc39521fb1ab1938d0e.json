{"ast":null,"code":"class Api {\n  constructor(options) {\n    this._url = options.url;\n    this._headers = options.headers;\n  }\n\n  changeUserPhoto(avatar) {\n    return fetch(this._url + \"/users/me/avatar\", {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify(avatar)\n    }).then(this._checkResponse);\n  }\n\n  changeLikeCardStatus(idCard, myLike) {\n    if (myLike) {\n      return fetch(`${this._url + \"/cards/likes\"}/${idCard}`, {\n        method: 'DELETE',\n        headers: this._headers\n      }).then(this._checkResponse);\n    } else {\n      return fetch(`${this._url + \"/cards/likes\"}/${idCard}`, {\n        method: 'PUT',\n        headers: this._headers\n      }).then(this._checkResponse);\n    }\n  }\n\n  deleteCard(idCard) {\n    return fetch(`${this._url + \"/cards\"}/${idCard}`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n  changeUserInfo(data) {\n    return fetch(this._url + \"/users/me\", {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify(data)\n    }).then(this._checkResponse);\n  }\n\n  addCard(data) {\n    return fetch(this._url + \"/cards\", {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify(data)\n    }).then(this._checkResponse);\n  }\n\n  getAllCards() {\n    return fetch(this._url + \"/cards\", {\n      method: 'GET',\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n  getUserInfo() {\n    return fetch(this._url + \"/users/me\", {\n      method: 'GET',\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(`Ошибка ${res.status}`);\n  }\n\n}\n\n;\nconst api = new Api({\n  url: \"https://mesto.nomoreparties.co/v1/cohort-29\",\n  headers: {\n    Authorization: \"49b668cb-f214-4312-b556-8e7c4d7fb9cc\",\n    \"content-type\": \"application/json\"\n  }\n});\nexport default api;","map":{"version":3,"sources":["/Users/admin/project mesto with React/mesto-react/mesto/src/utils/Api.js"],"names":["Api","constructor","options","_url","url","_headers","headers","changeUserPhoto","avatar","fetch","method","body","JSON","stringify","then","_checkResponse","changeLikeCardStatus","idCard","myLike","deleteCard","changeUserInfo","data","addCard","getAllCards","getUserInfo","res","ok","json","Promise","reject","status","api","Authorization"],"mappings":"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","sourcesContent":["class Api {\n    constructor(options) {\n        this._url = options.url;\n        this._headers = options.headers;\n    }\n\n    changeUserPhoto(avatar) {\n        return fetch(this._url + \"/users/me/avatar\", {\n            method: 'PATCH',\n            headers: this._headers,\n            body: JSON.stringify(avatar)\n        }).then(this._checkResponse);\n    }\n\n    changeLikeCardStatus(idCard, myLike) {\n        if (myLike) {\n            return fetch((`${this._url + \"/cards/likes\"}/${idCard}`), {\n                method: 'DELETE',\n                headers: this._headers\n            }).then(this._checkResponse); \n        } else {\n            return fetch((`${this._url + \"/cards/likes\"}/${idCard}`), {\n                method: 'PUT',\n                headers: this._headers\n            }).then(this._checkResponse); \n        }\n    }\n\n    deleteCard(idCard) {\n        return fetch((`${this._url + \"/cards\"}/${idCard}`), {\n            method: 'DELETE',\n            headers: this._headers\n        }).then(this._checkResponse);\n    }\n\n    changeUserInfo(data) {\n        return fetch(this._url + \"/users/me\", {\n            method: 'PATCH',\n            headers: this._headers,\n            body: JSON.stringify(data)\n        }).then(this._checkResponse);\n    }\n\n    addCard(data) {\n        return fetch(this._url + \"/cards\", {\n            method: 'POST',\n            headers: this._headers,\n            body: JSON.stringify(data)\n        }).then(this._checkResponse);\n    }\n\n    getAllCards() {\n        return fetch(this._url + \"/cards\", {\n            method: 'GET',\n            headers: this._headers\n        }).then(this._checkResponse);\n    }\n\n    getUserInfo() {\n        return fetch(this._url + \"/users/me\", {\n            method: 'GET',\n            headers: this._headers\n        }).then(this._checkResponse);\n    }\n\n    _checkResponse(res) {\n        if (res.ok) {\n            return res.json();\n        }\n        return Promise.reject(`Ошибка ${res.status}`);\n    }\n};\n\nconst api = new Api({\n    url: \"https://mesto.nomoreparties.co/v1/cohort-29\",\n    headers: {\n        Authorization: \"49b668cb-f214-4312-b556-8e7c4d7fb9cc\",\n        \"content-type\": \"application/json\"\n    }\n})\n\nexport default api;\n"]},"metadata":{},"sourceType":"module"}