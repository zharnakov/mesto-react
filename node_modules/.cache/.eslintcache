[{"/Users/admin/project mesto with React/mesto-react/mesto/src/index.js":"1","/Users/admin/project mesto with React/mesto-react/mesto/src/reportWebVitals.js":"2","/Users/admin/project mesto with React/mesto-react/mesto/src/components/App.js":"3","/Users/admin/project mesto with React/mesto-react/mesto/src/components/Header.js":"4","/Users/admin/project mesto with React/mesto-react/mesto/src/components/Main.js":"5","/Users/admin/project mesto with React/mesto-react/mesto/src/components/Footer.js":"6","/Users/admin/project mesto with React/mesto-react/mesto/src/components/PopupWithForm.js":"7","/Users/admin/project mesto with React/mesto-react/mesto/src/utils/Api.js":"8","/Users/admin/project mesto with React/mesto-react/mesto/src/components/Card.js":"9","/Users/admin/project mesto with React/mesto-react/mesto/src/components/ImagePopup.js":"10"},{"size":511,"mtime":1637163421238,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1637083488115,"results":"13","hashOfConfig":"12"},{"size":4474,"mtime":1638366475072,"results":"14","hashOfConfig":"12"},{"size":278,"mtime":1637162106775,"results":"15","hashOfConfig":"12"},{"size":2330,"mtime":1638316161688,"results":"16","hashOfConfig":"12"},{"size":215,"mtime":1637525872334,"results":"17","hashOfConfig":"12"},{"size":833,"mtime":1638316505749,"results":"18","hashOfConfig":"12"},{"size":2198,"mtime":1638029231172,"results":"19","hashOfConfig":"12"},{"size":957,"mtime":1638316206696,"results":"20","hashOfConfig":"12"},{"size":646,"mtime":1638299727366,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1srk4gi",{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/admin/project mesto with React/mesto-react/mesto/src/index.js",[],["45","46"],"/Users/admin/project mesto with React/mesto-react/mesto/src/reportWebVitals.js",[],"/Users/admin/project mesto with React/mesto-react/mesto/src/components/App.js",["47"],"import React, { useState } from 'react';\nimport headerLogo from '../images/logotip.svg'\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\n\nfunction App() {\n\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n\n    function handleEditProfileClick() {\n        setIsEditProfilePopupOpen(true);\n    }\n\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n\n    function handleAddPlaceClick() {\n        setIsAddPlacePopupOpen(true);\n    }\n\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n\n    function handleEditAvatarClick() {\n        setIsEditAvatarPopupOpen(true);\n    }\n\n//    функция handleDeleteCardClick никому не присвоена\n    const [isDeleteCardPopupOpen, setIsDeleteCardPopupOpen] = useState(false);\n\n    function handleDeleteCardClick() {\n        setIsDeleteCardPopupOpen(true);\n    }\n\n    const [selectedCard, setSelectedCard] = useState();\n\n    function handleCardClick(cardElement) {\n        setSelectedCard(cardElement);\n    }\n\n    function closeAllPopups() {\n        setIsEditProfilePopupOpen(false);\n        setIsAddPlacePopupOpen(false);\n        setIsEditAvatarPopupOpen(false);\n        setIsDeleteCardPopupOpen(false);\n        setSelectedCard();\n    }\n\n    return (\n        <div className=\"page\">\n            <div className=\"page__container\">\n                <Header />\n                <Main handleEditProfileClick={handleEditProfileClick} handleAddPlaceClick={handleAddPlaceClick} handleEditAvatarClick={handleEditAvatarClick} handleDeleteCardClick={handleDeleteCardClick} onCardClick={handleCardClick} />\n                <Footer />\n                <PopupWithForm name={'editProfile'} title={\"Редактировать профиль\"} buttonName={\"Сохранить\"} children isOpen={isEditProfilePopupOpen} onClose={closeAllPopups}>\n                    <div className=\"form__section\">\n                        <input className=\"form__input\" type=\"text\" name=\"name\" id=\"input-name\" placeholder=\"Имя\" required minLength=\"2\" maxLength=\"40\" />\n                        <span className=\"form__input-error input-name-error\"></span>\n                    </div>\n                    <div className=\"form__section\">\n                        <input className=\"form__input\" type=\"text\" name=\"occupation\" id=\"input-occupation\" placeholder=\"Род деятельности\" required minLength=\"2\" maxLength=\"200\" />\n                        <span className=\"form__input-error input-occupation-error\"></span>\n                    </div>\n                </PopupWithForm>\n\n                <PopupWithForm name={'addCard'} title={'Новое место'} buttonName={'Создать'} children isOpen={isAddPlacePopupOpen} onClose={closeAllPopups}>\n                    <div className=\"form__section\">\n                        <input className=\"form__input\" type=\"text\" name=\"titleImage\" id=\"input-titleImage\" placeholder=\"Название\" required minLength=\"2\" maxLength=\"30\" />\n                        <span className=\"form__input-error input-titleImage-error\"></span>\n                    </div>\n                    <div className=\"form__section\">\n                        <input className=\"form__input\" type=\"url\" name=\"linkImage\" id=\"input-linkImage\" placeholder=\"Ссылка на картинку\" required />\n                        <span className=\"form__input-error input-linkImage-error\"></span>\n                    </div>\n                </PopupWithForm>\n\n                <PopupWithForm name={'updateAvatar'} title={'Обновить аватар'} buttonName={'Сохранить'} children isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups}>\n                    <div className=\"form__section\">\n                        <input className=\"form__input\" type=\"url\" name=\"avatarLink\" id=\"input-avatarLink\" placeholder=\"Ссылка на картинку\" required />\n                        <span className=\"form__input-error input-avatarLink-error\"></span>\n                    </div>\n                </PopupWithForm>\n\n                <PopupWithForm name={'deleteCard'} title={'Вы уверены?'} buttonName={'Да'} isOpen={isDeleteCardPopupOpen} children onClose={closeAllPopups} />\n                <ImagePopup cardElement={selectedCard} onClose={closeAllPopups} />\n\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","/Users/admin/project mesto with React/mesto-react/mesto/src/components/Header.js",[],"/Users/admin/project mesto with React/mesto-react/mesto/src/components/Main.js",[],"/Users/admin/project mesto with React/mesto-react/mesto/src/components/Footer.js",[],"/Users/admin/project mesto with React/mesto-react/mesto/src/components/PopupWithForm.js",[],"/Users/admin/project mesto with React/mesto-react/mesto/src/utils/Api.js",[],"/Users/admin/project mesto with React/mesto-react/mesto/src/components/Card.js",["48","49","50"],"import React, { useEffect } from \"react\";\nimport api from \"../utils/Api\";\n\nfunction Card({ cardElement, onCardClick, handleDeleteCardClick }) {\n\n    function handleClick() {\n        onCardClick(cardElement);\n    }\n\n    return (\n        <article className=\"photo-grid__item\" >\n            <img className=\"photo-grid__item-image\" src={cardElement.link} onClick={handleClick} />\n            <button className=\"photo-grid__button\" aria-label=\"удаление карточки\" type=\"button\" onClick={handleDeleteCardClick}></button>\n            <div className=\"photo-grid__item-info\">\n                <h2 className=\"photo-grid__item-info-title\">{cardElement.name}</h2>\n                <button className=\"photo-grid__item-info-like\" aria-label=\"Лайк-сердечко\" type=\"button\"></button>\n                <span className=\"photo-grid__item-info-counter\">{cardElement.likes.length}</span>\n            </div>\n        </article>\n    )\n}\n\nexport default Card;","/Users/admin/project mesto with React/mesto-react/mesto/src/components/ImagePopup.js",[],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":2,"column":8,"nodeType":"57","messageId":"58","endLine":2,"endColumn":18},{"ruleId":"55","severity":1,"message":"59","line":1,"column":17,"nodeType":"57","messageId":"58","endLine":1,"endColumn":26},{"ruleId":"55","severity":1,"message":"60","line":2,"column":8,"nodeType":"57","messageId":"58","endLine":2,"endColumn":11},{"ruleId":"61","severity":1,"message":"62","line":12,"column":13,"nodeType":"63","endLine":12,"endColumn":100},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"no-unused-vars","'headerLogo' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'api' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]